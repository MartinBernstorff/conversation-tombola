{"version":3,"sources":["components/Todo.js","components/TaskList.js","App.js","index.js"],"names":["airtable","Airtable","apiKey","base","table","lwsLog","Mousetrap","require","Todo","props","HrefLink","id","bind","reRun","href","className","name","onClick","icon","faDice","console","log","update","then","resp","create","TaskList","useState","activities","setActivities","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","array","i","length","j","Math","floor","random","temp","shuffleArray","cycle","filter","record","fields","Name","Fin","slice","map","App","run","ReactDOM","render","tasks","document","getElementById"],"mappings":"+PAKMA,EAAW,IAAIC,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,cAELC,EAAS,IAAIJ,IAAS,CAACC,OAAQ,sBAChCC,KAAK,qBACLC,MAAM,OAELE,EAAYC,EAAQ,IAEX,SAASC,EAAKC,GACzB,IAAIC,EAAW,4DAA8DD,EAAME,GAInF,OAFAL,EAAUM,KAAK,KAAK,kBAAMH,EAAMI,WAGhC,gCACI,mBAAGC,KAAMJ,EAAUK,UAAU,mHAA7B,SACI,qBAAKA,UAAU,mCAAf,SACI,qBAAKA,UAAU,kDAAf,SAAkEN,EAAMO,WAGhF,wBAAQC,QAASR,EAAMI,MACnBE,UAAW,yIADf,SAGI,cAAC,IAAD,CAAiBG,KAAMC,QAE3B,wBACIJ,UAAW,yIAEXE,QAcR,WACIG,QAAQC,IAAI,WAAaZ,EAAMO,MAC/BhB,EAASsB,OAAOb,EAAME,GAAI,CAAC,KAAO,IAAOY,MAAK,SAAAC,GAC1CJ,QAAQC,IAAIG,GACZf,EAAMI,YArBV,2BAOA,wBACIE,UAAW,yIAEXE,QAeR,WACIG,QAAQC,IAAI,UAAYZ,EAAMO,KAAO,mBAErCX,EAAOoB,OACH,CAAC,OAAU,CACP,QAAS,CAAChB,EAAME,IAChB,QAAW,aAEjBY,MAAK,SAAAC,GACHJ,QAAQC,IAAIG,OA3BhB,iCCnCR,IAAMxB,EAAW,IAAIC,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,SAEI,SAASsB,EAASjB,GAAQ,IAAD,EAEAkB,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAkCpC,OA9BAC,qBAAU,WACN9B,EAAS+B,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,gBACNC,WAAY,SAEfZ,MAAK,SAACa,GACHP,EAAcO,EAAKC,YAEtBC,OAAM,SAACC,GACJnB,QAAQC,IAAIkB,QAEjB,IAEHnB,QAAQC,IAAIO,GAEZ,SAAsBY,GAClB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,GAInBC,CAAapB,GAEbR,QAAQC,IAAI,WAAaZ,EAAMwC,OAG3B,qBAAKlC,UAAU,qCAAf,SACI,6BACKa,EAAWc,OAAS,EACjBd,EACCsB,QAAO,SAAAC,GAAM,OAAIA,EAAOC,OAAOC,KAAKX,OAAS,OAC7CQ,QAAO,SAAAC,GAAM,OAA0B,IAAtBA,EAAOC,OAAOE,OAC/BC,MAAM,EAAG,GACTC,KAAI,SAACL,GAAD,OACD,cAAC3C,EAAD,CACIQ,KAAMmC,EAAOC,OAAOC,KACpB1C,GAAIwC,EAAOxC,GACXE,MAAOJ,EAAMI,WAIrB,qDCSL4C,MAhEf,SAAahD,GAAQ,IAAD,EACGkB,mBAAS,IADZ,mBACX+B,EADW,KACN7C,EADM,KAqClB,OAnCAO,QAAQC,IAAIqC,GAoCV,qBAAK3C,UAAU,yBAAf,SAgBE,qBAAKA,UAAU,0BAAf,SACE,cAACW,EAAD,CACEwB,OAAO,QACPrC,MAAOA,SCpDjB8C,IAASC,OACP,cAAC,EAAD,CAAKC,MAHM,KAIXC,SAASC,eAAe,W","file":"static/js/main.1e8b8b9b.chunk.js","sourcesContent":["import React from \"react\";\nimport Airtable from 'airtable-node'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDice } from '@fortawesome/free-solid-svg-icons'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Activities')\n\nconst lwsLog = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nconst Mousetrap = require(\"mousetrap\");\n\nexport default function Todo(props) {\n    let HrefLink = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg/\" + props.id\n\n    Mousetrap.bind(\"r\", () => props.reRun());\n\n    return (\n    <div>\n        <a href={HrefLink} className=\"shadow-md hover:shadow-lg group block rounded-lg p-4 border hover:border-gray-200 m-2 text-center justify-center\">\n            <div className=\"h-32 p-3 grid place-items-center\">\n                <div className=\"leading-6 font-medium text-black text-c text-xl\">{props.name}</div>\n            </div>\n        </a>\n        <button onClick={props.reRun}\n            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm max-w-sm\"\n        >\n            <FontAwesomeIcon icon={faDice} />\n        </button>\n        <button \n            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm max-w-sm\"\n\n            onClick={markFinished}\n        >\n                Mark as \"Fin\"\n        </button>\n        <button \n            className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm max-w-sm\"\n\n            onClick={addToday}\n        >\n                Select for today\n        </button>\n    </div>\n    );\n\n    function markFinished () {\n        console.log(\"Marking \" + props.name)\n        airtable.update(props.id, {\"Fin\": true}).then(resp => {\n            console.log(resp)\n            props.reRun()\n        })\n    }\n\n    function addToday () {\n        console.log(\"Adding \" + props.name + \" to today's log\")\n        \n        lwsLog.create(\n            {\"fields\": {\n                \"What?\": [props.id],\n                \"Context\": \"Leisure\"\n            }}\n        ).then(resp => {\n            console.log(resp)\n        })\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport Todo from \"./Todo\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Goals')\n\nexport default function TaskList(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: 'High priority',\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n\n    shuffleArray(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"justify-center max-w-sm m-5 w-full\">\n            <ul>\n                {activities.length > 0 ? (\n                    activities\n                    .filter(record => record.fields.Name.length < 100)\n                    .filter(record => record.fields.Fin !== true)\n                    .slice(0, 1)\n                    .map((record) => (\n                        <Todo\n                            name={record.fields.Name}\n                            id={record.id}\n                            reRun={props.reRun}\n                        />\n                    ))\n                ) : (\n                    <p>Fetching Data...</p>\n                )}\n            </ul>\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport TaskList from './components/TaskList'\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n  /* // Get goals for filter button list\n  const [goals, setGoals] = useState({});\n\n  useState(() => {\n    airtable.list({\n        maxRecords: 999,\n        pageSize: 100,\n        view: 'Grid view',\n        cellFormat: 'json'\n    })\n    .then((data) => {\n        setGoals(data.records);\n        console.log(goals)\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n  }, []);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n  }\n\n  shuffleArray(goals)\n\n  // Use filter button to filter task list\n  const [filter, setFilter] = useState(null);\n  */\n\n  return (\n    <div className=\"grid mx-auto max-w-3xl\">\n        {/* <ul className=\"grid grid-cols-2\">\n          {goals.length > 0 ? (\n              goals\n              .filter(record => record.fields.Name.length < 100)\n              .slice(0, 6)\n              .map((record) => (\n                  <FilterButton\n                      name={record.fields.Name}\n                      setFilter={setFilter}\n                  />\n              ))\n          ) : (\n              <p>Fetching Data...</p>\n          )}\n          </ul> */}\n      <div className=\"grid place-items-center\">\n        <TaskList \n          filter=\"False\"\n          reRun={reRun}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}